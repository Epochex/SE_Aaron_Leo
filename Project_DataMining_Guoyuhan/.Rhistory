library(readxl)
Molecular <- read_excel("C:/Users/22867/Desktop/TEXTWORK/Licence3Suivant/CnProject/DataMing/Molecular.xlsx")
View(Molecular)
library(readxl)
ER <- read_excel("C:/Users/22867/Desktop/TEXTWORK/Licence3Suivant/CnProject/DataMing/ER.xlsx")
View(ER)
hist(ER)
hist(ER$SMILES)
hist(ER$pIC50)
View(Molecular)
boxplot(ER)
boxplot(ER$pIC50)
density(ER$pIC50)
density(ER)
density(Molecular)
Molecular_numeric <- Molecular[,2:ncol(Molecular)]
lapply(data_numeric, density)
lapply(Molecular_numeric, density)
View(Molecular_numeric)
Molecular <- na.omit(Molecular)
ER <- na.omit(ER)
Molecular_numeric <- na.omit(Molecular_numeric)
lapply(Molecular_numeric, density)
is.na(ER)
ER_sorted <- ER[order(-ER$pIC50),]
View(ER_sorted)
plot(ER)
plot(ER$pIC50)
plot(ER_sorted$pIC50)
plot(ER$pIC50)
View(Molecular)
library(readxl)
Molecular <- read_excel("C:/Users/22867/Desktop/TEXTWORK/Licence3Suivant/CnProject/DataMing/Molecular.xlsx")
View(Molecular)
which(Molecular)
which(ER)
which(is.na(data))
which(is.na(ER))
which(is.na(Molecular))
which(is.na(Molecular), arr.ind = TRUE)
which(is.na(ER), arr.ind = TRUE)
duplicated(Molecular)
valeur_manquer_Molecular <-  which(is.na(Molecular), arr.ind = TRUE)
Molecular <- Molecular[-valeur_manquer_Molecular[,1],]
ER <- ER[-valeur_manquer_Molecular[,1],]
Molecular$pIC50 <- ER$pIC50
model_regression_pas <- lm(pIC50 ~ ., data =Molecular)
step(model_regression_pas)
model_regression_pas <- lm(pIC50 ~ Molecular[,2:ncol(Molecular)], data =Molecular)
Molecular_regression_pas <- Molecular[,2:ncol(Molecular)]
View(Molecular_regression_pas)
Molecular_regression_pas <- lm(pIC50 ~ . , data =Molecular_regression_pas)
Molecular_regression_pas <- Molecular[,2:ncol(Molecular)]
model_regression_pas <- lm(pIC50 ~ . , data =Molecular_regression_pas)
step(model_regression_pas)
head(model_regression_pas$coefficients, 30)
head(model_regression_pas$coefficients, 31)
summary(step(model_regression_pas))
X <- c(1, 2, 9, 12, 20)
D <- dist(X)
H <- hclust(D, method = "single")
plot(H, main = "Dendrogramme de l'algorithme de classification hiérarchique ascendante")
remove(X)
# Créer la matrice de distance
X <- c(1, 2, 9, 12, 20)
D <- dist(X)
# Appliquer l'algorithme de classification hiérarchique ascendante avec le critère de saut minimal
H <- hclust(D, method = "single")
# Tracer le dendrogramme correspondant avec les étiquettes correctes
plot(H, main = "Dendrogramme de l'algorithme de classification hiérarchique ascendante avec le critère de saut minimal", xlab = "Données", sub = NULL)
labels <- c("1", "2", "9", "12", "20")
axis(1, at = 1:5, labels = labels)
def.off
dev.off()
# Créer la matrice de distance
X <- c(1, 2, 9, 12, 20)
D <- dist(X)
# Appliquer l'algorithme de classification hiérarchique ascendante avec le critère de saut minimal
H <- hclust(D, method = "single")
# Tracer le dendrogramme correspondant avec les étiquettes correctes
plot(H, main = "Dendrogramme de l'algorithme de classification hiérarchique ascendante avec le critère de saut minimal", xlab = "Données", sub = NULL)
labels <- c("1", "2", "9", "12", "20")
axis(1, at = 1:5, labels = labels)
model_regression_pas <- lm(pIC50 ~ . , data =Molecular_regression_pas)
summary(model_regression_pas)
